# -*- coding: utf-8 -*-

################################################################################
## Form generated from reading UI file 'openxjv.ui'
##
## Created by: Qt User Interface Compiler version 6.10.0
##
## WARNING! All changes made in this file will be lost when recompiling UI file!
################################################################################

from PySide6.QtCore import (QCoreApplication, QDate, QDateTime, QLocale,
    QMetaObject, QObject, QPoint, QRect,
    QSize, QTime, QUrl, Qt)
from PySide6.QtGui import (QAction, QBrush, QColor, QConicalGradient,
    QCursor, QFont, QFontDatabase, QGradient,
    QIcon, QImage, QKeySequence, QLinearGradient,
    QPainter, QPalette, QPixmap, QRadialGradient,
    QTransform)
from PySide6.QtWebEngineWidgets import QWebEngineView
from PySide6.QtWidgets import (QAbstractItemView, QAbstractScrollArea, QApplication, QFormLayout,
    QFrame, QGridLayout, QGroupBox, QHBoxLayout,
    QHeaderView, QLabel, QLayout, QLineEdit,
    QMainWindow, QMenu, QMenuBar, QPlainTextEdit,
    QPushButton, QScrollArea, QSizePolicy, QSpacerItem,
    QSplitter, QStatusBar, QTabWidget, QTableWidget,
    QTableWidgetItem, QTextEdit, QToolBar, QTreeView,
    QVBoxLayout, QWidget)

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        if not MainWindow.objectName():
            MainWindow.setObjectName(u"MainWindow")
        MainWindow.setWindowModality(Qt.WindowModality.NonModal)
        MainWindow.setEnabled(True)
        MainWindow.resize(1275, 1255)
        MainWindow.setBaseSize(QSize(1280, 960))
        MainWindow.setContextMenuPolicy(Qt.ContextMenuPolicy.PreventContextMenu)
        MainWindow.setAnimated(True)
        MainWindow.setDocumentMode(False)
        MainWindow.setTabShape(QTabWidget.TabShape.Rounded)
        MainWindow.setDockNestingEnabled(False)
        MainWindow.setUnifiedTitleAndToolBarOnMac(False)
        self.actionUeberOpenXJV = QAction(MainWindow)
        self.actionUeberOpenXJV.setObjectName(u"actionUeberOpenXJV")
        self.actionUeberOpenXJV.setEnabled(True)
        self.actionOeffnen = QAction(MainWindow)
        self.actionOeffnen.setObjectName(u"actionOeffnen")
        self.actionPDF_js = QAction(MainWindow)
        self.actionPDF_js.setObjectName(u"actionPDF_js")
        self.actionPDF_js.setCheckable(True)
        self.actionPDF_js.setChecked(True)
        self.actionPDF_js.setEnabled(False)
        self.actionnativ = QAction(MainWindow)
        self.actionnativ.setObjectName(u"actionnativ")
        self.actionnativ.setCheckable(True)
        self.actionZuruecksetzen = QAction(MainWindow)
        self.actionZuruecksetzen.setObjectName(u"actionZuruecksetzen")
        self.actionFavoriten_bereinigen = QAction(MainWindow)
        self.actionFavoriten_bereinigen.setObjectName(u"actionFavoriten_bereinigen")
        self.actionFavoriten_bereinigen.setEnabled(False)
        self.actionAktenverzeichnis_festlegen = QAction(MainWindow)
        self.actionAktenverzeichnis_festlegen.setObjectName(u"actionAktenverzeichnis_festlegen")
        self.actionAktenverzeichnis_festlegen.setIconVisibleInMenu(False)
        self.actionDatumColumn = QAction(MainWindow)
        self.actionDatumColumn.setObjectName(u"actionDatumColumn")
        self.actionDatumColumn.setCheckable(True)
        self.actionDatumColumn.setChecked(True)
        self.actionEingangsdatumColumn = QAction(MainWindow)
        self.actionEingangsdatumColumn.setObjectName(u"actionEingangsdatumColumn")
        self.actionEingangsdatumColumn.setCheckable(True)
        self.actionEingangsdatumColumn.setChecked(False)
        self.actionVeraktungsdatumColumn = QAction(MainWindow)
        self.actionVeraktungsdatumColumn.setObjectName(u"actionVeraktungsdatumColumn")
        self.actionVeraktungsdatumColumn.setCheckable(True)
        self.actionDokumententypColumn = QAction(MainWindow)
        self.actionDokumententypColumn.setObjectName(u"actionDokumententypColumn")
        self.actionDokumententypColumn.setCheckable(True)
        self.actionDokumententypColumn.setChecked(True)
        self.actionDokumentenklasseColumn = QAction(MainWindow)
        self.actionDokumentenklasseColumn.setObjectName(u"actionDokumentenklasseColumn")
        self.actionDokumentenklasseColumn.setCheckable(True)
        self.actionDokumentenklasseColumn.setChecked(True)
        self.actionBestandteilColumn = QAction(MainWindow)
        self.actionBestandteilColumn.setObjectName(u"actionBestandteilColumn")
        self.actionBestandteilColumn.setCheckable(True)
        self.actionBestandteilColumn.setChecked(True)
        self.actionVersionsnummerColumn = QAction(MainWindow)
        self.actionVersionsnummerColumn.setObjectName(u"actionVersionsnummerColumn")
        self.actionVersionsnummerColumn.setCheckable(True)
        self.actionBezugsdateinameColumn = QAction(MainWindow)
        self.actionBezugsdateinameColumn.setObjectName(u"actionBezugsdateinameColumn")
        self.actionBezugsdateinameColumn.setCheckable(True)
        self.actionBezugsdateinameColumn.setEnabled(True)
        self.actionEEB_HinweisColumn = QAction(MainWindow)
        self.actionEEB_HinweisColumn.setObjectName(u"actionEEB_HinweisColumn")
        self.actionEEB_HinweisColumn.setCheckable(True)
        self.actionEEB_HinweisColumn.setChecked(True)
        self.actionZustellung_StPO_41Column = QAction(MainWindow)
        self.actionZustellung_StPO_41Column.setObjectName(u"actionZustellung_StPO_41Column")
        self.actionZustellung_StPO_41Column.setCheckable(True)
        self.actionAkteneinsichtColumn = QAction(MainWindow)
        self.actionAkteneinsichtColumn.setObjectName(u"actionAkteneinsichtColumn")
        self.actionAkteneinsichtColumn.setCheckable(True)
        self.actionAbsenderColumn = QAction(MainWindow)
        self.actionAbsenderColumn.setObjectName(u"actionAbsenderColumn")
        self.actionAbsenderColumn.setCheckable(True)
        self.actionAdressatColumn = QAction(MainWindow)
        self.actionAdressatColumn.setObjectName(u"actionAdressatColumn")
        self.actionAdressatColumn.setCheckable(True)
        self.actionJustizkostenrelevanzColumn = QAction(MainWindow)
        self.actionJustizkostenrelevanzColumn.setObjectName(u"actionJustizkostenrelevanzColumn")
        self.actionJustizkostenrelevanzColumn.setCheckable(True)
        self.actionfrGeschaeftszeichenColumn = QAction(MainWindow)
        self.actionfrGeschaeftszeichenColumn.setObjectName(u"actionfrGeschaeftszeichenColumn")
        self.actionfrGeschaeftszeichenColumn.setCheckable(True)
        self.actionVertraulichkeitsstufeColumn = QAction(MainWindow)
        self.actionVertraulichkeitsstufeColumn.setObjectName(u"actionVertraulichkeitsstufeColumn")
        self.actionVertraulichkeitsstufeColumn.setCheckable(True)
        self.actionSpaltenkonfiguration = QAction(MainWindow)
        self.actionSpaltenkonfiguration.setObjectName(u"actionSpaltenkonfiguration")
        self.actionSpaltenkonfiguration.setEnabled(False)
        font = QFont()
        font.setBold(True)
        self.actionSpaltenkonfiguration.setFont(font)
        self.actionNachrichtenkopf = QAction(MainWindow)
        self.actionNachrichtenkopf.setObjectName(u"actionNachrichtenkopf")
        self.actionNachrichtenkopf.setCheckable(True)
        self.actionNachrichtenkopf.setChecked(True)
        self.actionFavoriten = QAction(MainWindow)
        self.actionFavoriten.setObjectName(u"actionFavoriten")
        self.actionFavoriten.setCheckable(True)
        self.actionFavoriten.setChecked(True)
        self.actionLeereSpaltenAusblenden = QAction(MainWindow)
        self.actionLeereSpaltenAusblenden.setObjectName(u"actionLeereSpaltenAusblenden")
        self.actionLeereSpaltenAusblenden.setCheckable(True)
        self.actionLeereSpaltenAusblenden.setChecked(True)
        self.actionSchliessen = QAction(MainWindow)
        self.actionSchliessen.setObjectName(u"actionSchliessen")
        self.actionChromium = QAction(MainWindow)
        self.actionChromium.setObjectName(u"actionChromium")
        self.actionChromium.setCheckable(True)
        self.actionAnleitung = QAction(MainWindow)
        self.actionAnleitung.setObjectName(u"actionAnleitung")
        self.actionAnleitung.setEnabled(True)
        self.actionStyleFusion = QAction(MainWindow)
        self.actionStyleFusion.setObjectName(u"actionStyleFusion")
        self.actionStyleWindows = QAction(MainWindow)
        self.actionStyleWindows.setObjectName(u"actionStyleWindows")
        self.actionZIP_ArchiveOeffnen = QAction(MainWindow)
        self.actionZIP_ArchiveOeffnen.setObjectName(u"actionZIP_ArchiveOeffnen")
        self.actionSupport_anfragen = QAction(MainWindow)
        self.actionSupport_anfragen.setObjectName(u"actionSupport_anfragen")
        self.actionNeueVersion = QAction(MainWindow)
        self.actionNeueVersion.setObjectName(u"actionNeueVersion")
        self.actionNeueVersion.setEnabled(True)
        self.actionOnlineAufUpdatesPruefen = QAction(MainWindow)
        self.actionOnlineAufUpdatesPruefen.setObjectName(u"actionOnlineAufUpdatesPruefen")
        self.actionOnlineAufUpdatesPruefen.setCheckable(True)
        self.actionOnlineAufUpdatesPruefen.setChecked(True)
        self.actionScandatumColumn = QAction(MainWindow)
        self.actionScandatumColumn.setObjectName(u"actionScandatumColumn")
        self.actionScandatumColumn.setCheckable(True)
        self.actionNotizen = QAction(MainWindow)
        self.actionNotizen.setObjectName(u"actionNotizen")
        self.actionNotizen.setCheckable(True)
        self.actionAlleSpaltenMarkieren = QAction(MainWindow)
        self.actionAlleSpaltenMarkieren.setObjectName(u"actionAlleSpaltenMarkieren")
        self.actionGrosse_Schrift = QAction(MainWindow)
        self.actionGrosse_Schrift.setObjectName(u"actionGrosse_Schrift")
        self.actionGrosse_Schrift.setCheckable(True)
        self.actionErste_SnrColumn = QAction(MainWindow)
        self.actionErste_SnrColumn.setObjectName(u"actionErste_SnrColumn")
        self.actionErste_SnrColumn.setCheckable(True)
        self.actionZweite_Seitennr = QAction(MainWindow)
        self.actionZweite_Seitennr.setObjectName(u"actionZweite_Seitennr")
        self.actionZweite_Seitennr.setCheckable(True)
        self.actionErstellungszeitpunktColumn = QAction(MainWindow)
        self.actionErstellungszeitpunktColumn.setObjectName(u"actionErstellungszeitpunktColumn")
        self.actionErstellungszeitpunktColumn.setCheckable(True)
        self.actionNur_MetadatenColumn = QAction(MainWindow)
        self.actionNur_MetadatenColumn.setObjectName(u"actionNur_MetadatenColumn")
        self.actionNur_MetadatenColumn.setCheckable(True)
        self.actionLetzte_SnrColumn = QAction(MainWindow)
        self.actionLetzte_SnrColumn.setObjectName(u"actionLetzte_SnrColumn")
        self.actionLetzte_SnrColumn.setCheckable(True)
        self.actionAnwendungshinweise = QAction(MainWindow)
        self.actionAnwendungshinweise.setObjectName(u"actionAnwendungshinweise")
        self.actionAnwendungshinweise.setCheckable(True)
        self.actionAnwendungshinweise.setChecked(True)
        self.actionHistorieZurück = QAction(MainWindow)
        self.actionHistorieZurück.setObjectName(u"actionHistorieZur\u00fcck")
        self.actionHistorieVor = QAction(MainWindow)
        self.actionHistorieVor.setObjectName(u"actionHistorieVor")
        self.actionMetadaten = QAction(MainWindow)
        self.actionMetadaten.setObjectName(u"actionMetadaten")
        self.actionMetadaten.setCheckable(True)
        self.actionErsetzenderScanColumn = QAction(MainWindow)
        self.actionErsetzenderScanColumn.setObjectName(u"actionErsetzenderScanColumn")
        self.actionErsetzenderScanColumn.setCheckable(True)
        self.actionPDFExport = QAction(MainWindow)
        self.actionPDFExport.setObjectName(u"actionPDFExport")
        self.actionAlleSpaltenAbwaehlen = QAction(MainWindow)
        self.actionAlleSpaltenAbwaehlen.setObjectName(u"actionAlleSpaltenAbwaehlen")
        self.actionDeckblattBeiExport = QAction(MainWindow)
        self.actionDeckblattBeiExport.setObjectName(u"actionDeckblattBeiExport")
        self.actionDeckblattBeiExport.setCheckable(True)
        self.actionDeckblattBeiExport.setChecked(True)
        self.actionDateidatumExportieren = QAction(MainWindow)
        self.actionDateidatumExportieren.setObjectName(u"actionDateidatumExportieren")
        self.actionDateidatumExportieren.setCheckable(True)
        self.actionDateidatumExportieren.setChecked(True)
        self.actionFavoritenExportieren = QAction(MainWindow)
        self.actionFavoritenExportieren.setObjectName(u"actionFavoritenExportieren")
        self.actionFavoritenExportieren.setCheckable(True)
        self.actionFavoritenExportieren.setChecked(True)
        self.actionNurFavoritenExportieren = QAction(MainWindow)
        self.actionNurFavoritenExportieren.setObjectName(u"actionNurFavoritenExportieren")
        self.actionNurFavoritenExportieren.setCheckable(True)
        self.actionNurFavoritenExportieren.setVisible(False)
        self.actionPDFnachExportOeffnen = QAction(MainWindow)
        self.actionPDFnachExportOeffnen.setObjectName(u"actionPDFnachExportOeffnen")
        self.actionPDFnachExportOeffnen.setCheckable(True)
        self.actionPDFnachExportOeffnen.setChecked(True)
        self.actionSucheAnzeigen = QAction(MainWindow)
        self.actionSucheAnzeigen.setObjectName(u"actionSucheAnzeigen")
        self.actionSucheAnzeigen.setCheckable(True)
        self.actionSucheAnzeigen.setChecked(True)
        self.actionTexterkennung = QAction(MainWindow)
        self.actionTexterkennung.setObjectName(u"actionTexterkennung")
        self.actionTexterkennungAktuellesPDF = QAction(MainWindow)
        self.actionTexterkennungAktuellesPDF.setObjectName(u"actionTexterkennungAktuellesPDF")
        font1 = QFont()
        font1.setFamilies([u"Material Icons"])
        self.actionTexterkennungAktuellesPDF.setFont(font1)
        self.actionNotizenaufDeckblattausgeben = QAction(MainWindow)
        self.actionNotizenaufDeckblattausgeben.setObjectName(u"actionNotizenaufDeckblattausgeben")
        self.actionNotizenaufDeckblattausgeben.setCheckable(True)
        self.actionNotizenaufDeckblattausgeben.setChecked(True)
        self.actionFavPDFExport = QAction(MainWindow)
        self.actionFavPDFExport.setObjectName(u"actionFavPDFExport")
        self.actionVerlaufLoeschen = QAction(MainWindow)
        self.actionVerlaufLoeschen.setObjectName(u"actionVerlaufLoeschen")
        self.actionNotizUndSuchdatenbankLoeschen = QAction(MainWindow)
        self.actionNotizUndSuchdatenbankLoeschen.setObjectName(u"actionNotizUndSuchdatenbankLoeschen")
        self.actionNachrichtSchliessen = QAction(MainWindow)
        self.actionNachrichtSchliessen.setObjectName(u"actionNachrichtSchliessen")
        self.actionNotesPDFExport = QAction(MainWindow)
        self.actionNotesPDFExport.setObjectName(u"actionNotesPDFExport")
        self.actionGeheimhaltungsgradColumn = QAction(MainWindow)
        self.actionGeheimhaltungsgradColumn.setObjectName(u"actionGeheimhaltungsgradColumn")
        self.actionGeheimhaltungsgradColumn.setCheckable(True)
        self.actionEinstufungsfristColumn = QAction(MainWindow)
        self.actionEinstufungsfristColumn.setObjectName(u"actionEinstufungsfristColumn")
        self.actionEinstufungsfristColumn.setCheckable(True)
        self.actionEinstufungsdatumColumn = QAction(MainWindow)
        self.actionEinstufungsdatumColumn.setObjectName(u"actionEinstufungsdatumColumn")
        self.actionEinstufungsdatumColumn.setCheckable(True)
        self.actionHerausgeberColumn = QAction(MainWindow)
        self.actionHerausgeberColumn.setObjectName(u"actionHerausgeberColumn")
        self.actionHerausgeberColumn.setCheckable(True)
        self.actionEinstufungsendeColumn = QAction(MainWindow)
        self.actionEinstufungsendeColumn.setObjectName(u"actionEinstufungsendeColumn")
        self.actionEinstufungsendeColumn.setCheckable(True)
        self.actionGeheimBemerkungColumn = QAction(MainWindow)
        self.actionGeheimBemerkungColumn.setObjectName(u"actionGeheimBemerkungColumn")
        self.actionGeheimBemerkungColumn.setCheckable(True)
        self.actionVertraulichZuBehandelnColumn = QAction(MainWindow)
        self.actionVertraulichZuBehandelnColumn.setObjectName(u"actionVertraulichZuBehandelnColumn")
        self.actionVertraulichZuBehandelnColumn.setCheckable(True)
        self.actionDateitabelleLinksbuendig = QAction(MainWindow)
        self.actionDateitabelleLinksbuendig.setObjectName(u"actionDateitabelleLinksbuendig")
        self.actionDateitabelleLinksbuendig.setCheckable(True)
        self.centralwidget = QWidget(MainWindow)
        self.centralwidget.setObjectName(u"centralwidget")
        sizePolicy = QSizePolicy(QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.gridLayout_13 = QGridLayout(self.centralwidget)
        self.gridLayout_13.setObjectName(u"gridLayout_13")
        self.gridLayout_13.setContentsMargins(0, 0, 0, 0)
        self.tabs = QTabWidget(self.centralwidget)
        self.tabs.setObjectName(u"tabs")
        self.tabs.setEnabled(True)
        sizePolicy.setHeightForWidth(self.tabs.sizePolicy().hasHeightForWidth())
        self.tabs.setSizePolicy(sizePolicy)
        self.tabs.setSizeIncrement(QSize(0, 0))
        self.tabs.setCursor(QCursor(Qt.CursorShape.ArrowCursor))
        self.tabs.setAutoFillBackground(False)
        self.tabs.setLocale(QLocale(QLocale.German, QLocale.Germany))
        self.dokumente = QWidget()
        self.dokumente.setObjectName(u"dokumente")
        self.gridLayout = QGridLayout(self.dokumente)
        self.gridLayout.setObjectName(u"gridLayout")
        self.splitter_9 = QSplitter(self.dokumente)
        self.splitter_9.setObjectName(u"splitter_9")
        self.splitter_9.setOrientation(Qt.Orientation.Horizontal)
        self.splitter_9.setHandleWidth(5)
        self.splitter_9.setChildrenCollapsible(False)
        self.splitter_5 = QSplitter(self.splitter_9)
        self.splitter_5.setObjectName(u"splitter_5")
        sizePolicy1 = QSizePolicy(QSizePolicy.Policy.Preferred, QSizePolicy.Policy.Expanding)
        sizePolicy1.setHorizontalStretch(1)
        sizePolicy1.setVerticalStretch(0)
        sizePolicy1.setHeightForWidth(self.splitter_5.sizePolicy().hasHeightForWidth())
        self.splitter_5.setSizePolicy(sizePolicy1)
        self.splitter_5.setBaseSize(QSize(640, 0))
        self.splitter_5.setOrientation(Qt.Orientation.Vertical)
        self.splitter_5.setHandleWidth(5)
        self.splitter_5.setChildrenCollapsible(False)
        self.splitter_3 = QSplitter(self.splitter_5)
        self.splitter_3.setObjectName(u"splitter_3")
        self.splitter_3.setEnabled(True)
        sizePolicy2 = QSizePolicy(QSizePolicy.Policy.Preferred, QSizePolicy.Policy.Expanding)
        sizePolicy2.setHorizontalStretch(0)
        sizePolicy2.setVerticalStretch(1)
        sizePolicy2.setHeightForWidth(self.splitter_3.sizePolicy().hasHeightForWidth())
        self.splitter_3.setSizePolicy(sizePolicy2)
        self.splitter_3.setOrientation(Qt.Orientation.Vertical)
        self.splitter_3.setHandleWidth(5)
        self.splitter_3.setChildrenCollapsible(False)
        self.nachrichtenkopf = QGroupBox(self.splitter_3)
        self.nachrichtenkopf.setObjectName(u"nachrichtenkopf")
        sizePolicy3 = QSizePolicy(QSizePolicy.Policy.Preferred, QSizePolicy.Policy.Preferred)
        sizePolicy3.setHorizontalStretch(1)
        sizePolicy3.setVerticalStretch(1)
        sizePolicy3.setHeightForWidth(self.nachrichtenkopf.sizePolicy().hasHeightForWidth())
        self.nachrichtenkopf.setSizePolicy(sizePolicy3)
        self.nachrichtenkopf.setMinimumSize(QSize(0, 120))
        self.nachrichtenkopf.setMaximumSize(QSize(16777215, 120))
        self.nachrichtenkopf.setBaseSize(QSize(0, 120))
        self.gridLayout_10 = QGridLayout(self.nachrichtenkopf)
        self.gridLayout_10.setObjectName(u"gridLayout_10")
        self.horizontalLayout_2 = QHBoxLayout()
        self.horizontalLayout_2.setObjectName(u"horizontalLayout_2")
        self.horizontalLayout_2.setSizeConstraint(QLayout.SizeConstraint.SetNoConstraint)
        self.formLayout = QFormLayout()
        self.formLayout.setObjectName(u"formLayout")
        self.absenderLabel = QLabel(self.nachrichtenkopf)
        self.absenderLabel.setObjectName(u"absenderLabel")

        self.formLayout.setWidget(1, QFormLayout.ItemRole.LabelRole, self.absenderLabel)

        self.absenderText = QLineEdit(self.nachrichtenkopf)
        self.absenderText.setObjectName(u"absenderText")
        self.absenderText.setContextMenuPolicy(Qt.ContextMenuPolicy.CustomContextMenu)
        self.absenderText.setAcceptDrops(False)
        self.absenderText.setReadOnly(True)

        self.formLayout.setWidget(1, QFormLayout.ItemRole.FieldRole, self.absenderText)

        self.empfaengerLabel = QLabel(self.nachrichtenkopf)
        self.empfaengerLabel.setObjectName(u"empfaengerLabel")

        self.formLayout.setWidget(2, QFormLayout.ItemRole.LabelRole, self.empfaengerLabel)

        self.empfaengerText = QLineEdit(self.nachrichtenkopf)
        self.empfaengerText.setObjectName(u"empfaengerText")
        self.empfaengerText.setContextMenuPolicy(Qt.ContextMenuPolicy.CustomContextMenu)
        self.empfaengerText.setAcceptDrops(False)
        self.empfaengerText.setReadOnly(True)

        self.formLayout.setWidget(2, QFormLayout.ItemRole.FieldRole, self.empfaengerText)

        self.erstellungszeitpunktLabel = QLabel(self.nachrichtenkopf)
        self.erstellungszeitpunktLabel.setObjectName(u"erstellungszeitpunktLabel")

        self.formLayout.setWidget(3, QFormLayout.ItemRole.LabelRole, self.erstellungszeitpunktLabel)

        self.erstellungszeitpunktText = QLineEdit(self.nachrichtenkopf)
        self.erstellungszeitpunktText.setObjectName(u"erstellungszeitpunktText")
        self.erstellungszeitpunktText.setContextMenuPolicy(Qt.ContextMenuPolicy.CustomContextMenu)
        self.erstellungszeitpunktText.setAcceptDrops(False)
        self.erstellungszeitpunktText.setReadOnly(True)

        self.formLayout.setWidget(3, QFormLayout.ItemRole.FieldRole, self.erstellungszeitpunktText)


        self.horizontalLayout_2.addLayout(self.formLayout)

        self.formLayout_2 = QFormLayout()
        self.formLayout_2.setObjectName(u"formLayout_2")
        self.absAktenzeichenLabel = QLabel(self.nachrichtenkopf)
        self.absAktenzeichenLabel.setObjectName(u"absAktenzeichenLabel")
        self.absAktenzeichenLabel.setToolTipDuration(2000)

        self.formLayout_2.setWidget(1, QFormLayout.ItemRole.LabelRole, self.absAktenzeichenLabel)

        self.absenderAktenzeichenText = QLineEdit(self.nachrichtenkopf)
        self.absenderAktenzeichenText.setObjectName(u"absenderAktenzeichenText")
        self.absenderAktenzeichenText.setContextMenuPolicy(Qt.ContextMenuPolicy.CustomContextMenu)
        self.absenderAktenzeichenText.setAcceptDrops(False)
        self.absenderAktenzeichenText.setToolTipDuration(2000)
        self.absenderAktenzeichenText.setReadOnly(True)

        self.formLayout_2.setWidget(1, QFormLayout.ItemRole.FieldRole, self.absenderAktenzeichenText)

        self.empfAktenzeichenLabel = QLabel(self.nachrichtenkopf)
        self.empfAktenzeichenLabel.setObjectName(u"empfAktenzeichenLabel")
        self.empfAktenzeichenLabel.setToolTipDuration(2000)

        self.formLayout_2.setWidget(2, QFormLayout.ItemRole.LabelRole, self.empfAktenzeichenLabel)

        self.empfaengerAktenzeichenText = QLineEdit(self.nachrichtenkopf)
        self.empfaengerAktenzeichenText.setObjectName(u"empfaengerAktenzeichenText")
        self.empfaengerAktenzeichenText.setContextMenuPolicy(Qt.ContextMenuPolicy.CustomContextMenu)
        self.empfaengerAktenzeichenText.setAcceptDrops(False)
        self.empfaengerAktenzeichenText.setToolTipDuration(2000)
        self.empfaengerAktenzeichenText.setReadOnly(True)

        self.formLayout_2.setWidget(2, QFormLayout.ItemRole.FieldRole, self.empfaengerAktenzeichenText)

        self.sendungsprioritaetLabel = QLabel(self.nachrichtenkopf)
        self.sendungsprioritaetLabel.setObjectName(u"sendungsprioritaetLabel")

        self.formLayout_2.setWidget(3, QFormLayout.ItemRole.LabelRole, self.sendungsprioritaetLabel)

        self.sendungsprioritaetText = QLineEdit(self.nachrichtenkopf)
        self.sendungsprioritaetText.setObjectName(u"sendungsprioritaetText")
        self.sendungsprioritaetText.setContextMenuPolicy(Qt.ContextMenuPolicy.CustomContextMenu)
        self.sendungsprioritaetText.setAcceptDrops(False)
        self.sendungsprioritaetText.setReadOnly(True)

        self.formLayout_2.setWidget(3, QFormLayout.ItemRole.FieldRole, self.sendungsprioritaetText)


        self.horizontalLayout_2.addLayout(self.formLayout_2)


        self.gridLayout_10.addLayout(self.horizontalLayout_2, 0, 0, 1, 1)

        self.splitter_3.addWidget(self.nachrichtenkopf)
        self.splitter_2 = QSplitter(self.splitter_3)
        self.splitter_2.setObjectName(u"splitter_2")
        sizePolicy4 = QSizePolicy(QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Preferred)
        sizePolicy4.setHorizontalStretch(0)
        sizePolicy4.setVerticalStretch(1)
        sizePolicy4.setHeightForWidth(self.splitter_2.sizePolicy().hasHeightForWidth())
        self.splitter_2.setSizePolicy(sizePolicy4)
        self.splitter_2.setOrientation(Qt.Orientation.Horizontal)
        self.splitter_2.setHandleWidth(5)
        self.splitter_2.setChildrenCollapsible(False)
        self.favoriten = QGroupBox(self.splitter_2)
        self.favoriten.setObjectName(u"favoriten")
        sizePolicy5 = QSizePolicy(QSizePolicy.Policy.Preferred, QSizePolicy.Policy.Preferred)
        sizePolicy5.setHorizontalStretch(0)
        sizePolicy5.setVerticalStretch(0)
        sizePolicy5.setHeightForWidth(self.favoriten.sizePolicy().hasHeightForWidth())
        self.favoriten.setSizePolicy(sizePolicy5)
        self.favoriten.setMinimumSize(QSize(0, 190))
        self.favoriten.setAlignment(Qt.AlignmentFlag.AlignLeading|Qt.AlignmentFlag.AlignLeft|Qt.AlignmentFlag.AlignVCenter)
        self.favoriten.setFlat(False)
        self.gridLayout_4 = QGridLayout(self.favoriten)
        self.gridLayout_4.setObjectName(u"gridLayout_4")
        self.gridLayout_4.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout = QVBoxLayout()
        self.verticalLayout.setSpacing(9)
        self.verticalLayout.setObjectName(u"verticalLayout")
        self.verticalLayout.setContentsMargins(9, 9, 9, 9)
        self.scrollArea_2 = QScrollArea(self.favoriten)
        self.scrollArea_2.setObjectName(u"scrollArea_2")
        self.scrollArea_2.setFrameShape(QFrame.Shape.NoFrame)
        self.scrollArea_2.setFrameShadow(QFrame.Shadow.Plain)
        self.scrollArea_2.setLineWidth(0)
        self.scrollArea_2.setSizeAdjustPolicy(QAbstractScrollArea.SizeAdjustPolicy.AdjustIgnored)
        self.scrollArea_2.setWidgetResizable(True)
        self.scrollAreaWidgetContents_2 = QWidget()
        self.scrollAreaWidgetContents_2.setObjectName(u"scrollAreaWidgetContents_2")
        self.scrollAreaWidgetContents_2.setGeometry(QRect(0, 0, 306, 137))
        self.gridLayout_5 = QGridLayout(self.scrollAreaWidgetContents_2)
        self.gridLayout_5.setSpacing(0)
        self.gridLayout_5.setObjectName(u"gridLayout_5")
        self.gridLayout_5.setContentsMargins(0, 0, 0, 0)
        self.favTableView = QTableWidget(self.scrollAreaWidgetContents_2)
        self.favTableView.setObjectName(u"favTableView")
        sizePolicy.setHeightForWidth(self.favTableView.sizePolicy().hasHeightForWidth())
        self.favTableView.setSizePolicy(sizePolicy)
        self.favTableView.setMinimumSize(QSize(0, 100))
        self.favTableView.setToolTipDuration(2500)
        self.favTableView.setInputMethodHints(Qt.InputMethodHint.ImhMultiLine)
        self.favTableView.setSizeAdjustPolicy(QAbstractScrollArea.SizeAdjustPolicy.AdjustToContents)
        self.favTableView.setAutoScroll(True)
        self.favTableView.setAutoScrollMargin(0)
        self.favTableView.setEditTriggers(QAbstractItemView.EditTrigger.NoEditTriggers)
        self.favTableView.setProperty(u"showDropIndicator", False)
        self.favTableView.setDragDropOverwriteMode(False)
        self.favTableView.setAlternatingRowColors(True)
        self.favTableView.setSelectionMode(QAbstractItemView.SelectionMode.SingleSelection)
        self.favTableView.setSelectionBehavior(QAbstractItemView.SelectionBehavior.SelectRows)
        self.favTableView.setTextElideMode(Qt.TextElideMode.ElideMiddle)
        self.favTableView.setVerticalScrollMode(QAbstractItemView.ScrollMode.ScrollPerPixel)
        self.favTableView.setShowGrid(False)
        self.favTableView.setCornerButtonEnabled(False)
        self.favTableView.horizontalHeader().setMinimumSectionSize(200)
        self.favTableView.horizontalHeader().setDefaultSectionSize(200)
        self.favTableView.horizontalHeader().setStretchLastSection(True)
        self.favTableView.verticalHeader().setVisible(False)
        self.favTableView.verticalHeader().setMinimumSectionSize(21)

        self.gridLayout_5.addWidget(self.favTableView, 1, 0, 1, 1)

        self.scrollArea_2.setWidget(self.scrollAreaWidgetContents_2)

        self.verticalLayout.addWidget(self.scrollArea_2)

        self.frame = QFrame(self.favoriten)
        self.frame.setObjectName(u"frame")
        sizePolicy6 = QSizePolicy(QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Minimum)
        sizePolicy6.setHorizontalStretch(0)
        sizePolicy6.setVerticalStretch(0)
        sizePolicy6.setHeightForWidth(self.frame.sizePolicy().hasHeightForWidth())
        self.frame.setSizePolicy(sizePolicy6)
        self.frame.setMinimumSize(QSize(0, 30))
        self.frame.setFrameShape(QFrame.Shape.NoFrame)
        self.frame.setFrameShadow(QFrame.Shadow.Raised)
        self.frame.setLineWidth(0)
        self.horizontalLayout_3 = QHBoxLayout(self.frame)
        self.horizontalLayout_3.setSpacing(2)
        self.horizontalLayout_3.setObjectName(u"horizontalLayout_3")
        self.horizontalLayout_3.setSizeConstraint(QLayout.SizeConstraint.SetNoConstraint)
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.deleteFavoriteButton = QPushButton(self.frame)
        self.deleteFavoriteButton.setObjectName(u"deleteFavoriteButton")
        self.deleteFavoriteButton.setFont(font1)
        self.deleteFavoriteButton.setToolTipDuration(2000)

        self.horizontalLayout_3.addWidget(self.deleteFavoriteButton)

        self.saveFavouritesButton = QPushButton(self.frame)
        self.saveFavouritesButton.setObjectName(u"saveFavouritesButton")
        self.saveFavouritesButton.setFont(font1)
        self.saveFavouritesButton.setToolTipDuration(2000)

        self.horizontalLayout_3.addWidget(self.saveFavouritesButton)

        self.exportFavoritesButton = QPushButton(self.frame)
        self.exportFavoritesButton.setObjectName(u"exportFavoritesButton")
        self.exportFavoritesButton.setFont(font1)
        self.exportFavoritesButton.setToolTipDuration(2000)

        self.horizontalLayout_3.addWidget(self.exportFavoritesButton)

        self.exportFavsToPdfButton = QPushButton(self.frame)
        self.exportFavsToPdfButton.setObjectName(u"exportFavsToPdfButton")
        self.exportFavsToPdfButton.setFont(font1)
        self.exportFavsToPdfButton.setToolTipDuration(2000)

        self.horizontalLayout_3.addWidget(self.exportFavsToPdfButton)


        self.verticalLayout.addWidget(self.frame)


        self.gridLayout_4.addLayout(self.verticalLayout, 0, 0, 1, 1)

        self.splitter_2.addWidget(self.favoriten)
        self.splitter = QSplitter(self.splitter_2)
        self.splitter.setObjectName(u"splitter")
        self.splitter.setFrameShape(QFrame.Shape.NoFrame)
        self.splitter.setOrientation(Qt.Orientation.Vertical)
        self.splitter.setChildrenCollapsible(False)
        self.inhalt = QGroupBox(self.splitter)
        self.inhalt.setObjectName(u"inhalt")
        self.inhalt.setMinimumSize(QSize(0, 0))
        self.gridLayout_3 = QGridLayout(self.inhalt)
        self.gridLayout_3.setSpacing(0)
        self.gridLayout_3.setObjectName(u"gridLayout_3")
        self.gridLayout_3.setContentsMargins(9, 9, 9, 9)
        self.scrollArea = QScrollArea(self.inhalt)
        self.scrollArea.setObjectName(u"scrollArea")
        self.scrollArea.setWidgetResizable(True)
        self.scrollAreaWidgetContents = QWidget()
        self.scrollAreaWidgetContents.setObjectName(u"scrollAreaWidgetContents")
        self.scrollAreaWidgetContents.setGeometry(QRect(0, 0, 238, 69))
        self.gridLayout_6 = QGridLayout(self.scrollAreaWidgetContents)
        self.gridLayout_6.setObjectName(u"gridLayout_6")
        self.gridLayout_6.setContentsMargins(0, 0, 0, 0)
        self.inhaltView = QTreeView(self.scrollAreaWidgetContents)
        self.inhaltView.setObjectName(u"inhaltView")
        self.inhaltView.setToolTipDuration(4000)
        self.inhaltView.setFrameShape(QFrame.Shape.NoFrame)
        self.inhaltView.setSizeAdjustPolicy(QAbstractScrollArea.SizeAdjustPolicy.AdjustIgnored)

        self.gridLayout_6.addWidget(self.inhaltView, 0, 0, 1, 1)

        self.scrollArea.setWidget(self.scrollAreaWidgetContents)

        self.gridLayout_3.addWidget(self.scrollArea, 0, 0, 1, 1)

        self.splitter.addWidget(self.inhalt)
        self.metadaten = QGroupBox(self.splitter)
        self.metadaten.setObjectName(u"metadaten")
        self.metadaten.setMinimumSize(QSize(0, 100))
        self.gridLayout_7 = QGridLayout(self.metadaten)
        self.gridLayout_7.setObjectName(u"gridLayout_7")
        self.gridLayout_7.setContentsMargins(9, 9, 9, 9)
        self.metadatenText = QTextEdit(self.metadaten)
        self.metadatenText.setObjectName(u"metadatenText")
        self.metadatenText.setMinimumSize(QSize(0, 0))
        self.metadatenText.setContextMenuPolicy(Qt.ContextMenuPolicy.DefaultContextMenu)
        self.metadatenText.setAcceptDrops(False)
        self.metadatenText.setToolTipDuration(1500)
        self.metadatenText.setInputMethodHints(Qt.InputMethodHint.ImhMultiLine)
        self.metadatenText.setFrameShape(QFrame.Shape.StyledPanel)
        self.metadatenText.setLineWidth(1)
        self.metadatenText.setMidLineWidth(0)
        self.metadatenText.setSizeAdjustPolicy(QAbstractScrollArea.SizeAdjustPolicy.AdjustIgnored)
        self.metadatenText.setLineWrapMode(QTextEdit.LineWrapMode.NoWrap)
        self.metadatenText.setReadOnly(True)
        self.metadatenText.setTextInteractionFlags(Qt.TextInteractionFlag.TextSelectableByMouse)

        self.gridLayout_7.addWidget(self.metadatenText, 0, 0, 1, 1)

        self.splitter.addWidget(self.metadaten)
        self.splitter_2.addWidget(self.splitter)
        self.splitter_3.addWidget(self.splitter_2)
        self.splitter_5.addWidget(self.splitter_3)
        self.splitter_4 = QSplitter(self.splitter_5)
        self.splitter_4.setObjectName(u"splitter_4")
        sizePolicy7 = QSizePolicy(QSizePolicy.Policy.Preferred, QSizePolicy.Policy.Expanding)
        sizePolicy7.setHorizontalStretch(0)
        sizePolicy7.setVerticalStretch(3)
        sizePolicy7.setHeightForWidth(self.splitter_4.sizePolicy().hasHeightForWidth())
        self.splitter_4.setSizePolicy(sizePolicy7)
        self.splitter_4.setOrientation(Qt.Orientation.Vertical)
        self.splitter_4.setHandleWidth(5)
        self.splitter_4.setChildrenCollapsible(False)
        self.dokumente_2 = QGroupBox(self.splitter_4)
        self.dokumente_2.setObjectName(u"dokumente_2")
        sizePolicy8 = QSizePolicy(QSizePolicy.Policy.Preferred, QSizePolicy.Policy.Preferred)
        sizePolicy8.setHorizontalStretch(1)
        sizePolicy8.setVerticalStretch(2)
        sizePolicy8.setHeightForWidth(self.dokumente_2.sizePolicy().hasHeightForWidth())
        self.dokumente_2.setSizePolicy(sizePolicy8)
        self.dokumente_2.setMinimumSize(QSize(0, 200))
        self.dokumente_2.setInputMethodHints(Qt.InputMethodHint.ImhNone)
        self.gridLayout_9 = QGridLayout(self.dokumente_2)
        self.gridLayout_9.setObjectName(u"gridLayout_9")
        self.verticalLayout_2 = QVBoxLayout()
        self.verticalLayout_2.setSpacing(6)
        self.verticalLayout_2.setObjectName(u"verticalLayout_2")
        self.verticalLayout_2.setSizeConstraint(QLayout.SizeConstraint.SetNoConstraint)
        self.horizontalLayout = QHBoxLayout()
        self.horizontalLayout.setObjectName(u"horizontalLayout")
        self.label_9 = QLabel(self.dokumente_2)
        self.label_9.setObjectName(u"label_9")

        self.horizontalLayout.addWidget(self.label_9)

        self.plusFilter = QLineEdit(self.dokumente_2)
        self.plusFilter.setObjectName(u"plusFilter")
        self.plusFilter.setToolTipDuration(3000)

        self.horizontalLayout.addWidget(self.plusFilter)

        self.horizontalSpacer = QSpacerItem(10, 20, QSizePolicy.Policy.Fixed, QSizePolicy.Policy.Minimum)

        self.horizontalLayout.addItem(self.horizontalSpacer)

        self.label_10 = QLabel(self.dokumente_2)
        self.label_10.setObjectName(u"label_10")

        self.horizontalLayout.addWidget(self.label_10)

        self.minusFilter = QLineEdit(self.dokumente_2)
        self.minusFilter.setObjectName(u"minusFilter")
        self.minusFilter.setToolTipDuration(3000)

        self.horizontalLayout.addWidget(self.minusFilter)

        self.horizontalSpacer_2 = QSpacerItem(10, 20, QSizePolicy.Policy.Fixed, QSizePolicy.Policy.Minimum)

        self.horizontalLayout.addItem(self.horizontalSpacer_2)

        self.filterMagic = QPushButton(self.dokumente_2)
        self.filterMagic.setObjectName(u"filterMagic")
        sizePolicy9 = QSizePolicy(QSizePolicy.Policy.Fixed, QSizePolicy.Policy.Fixed)
        sizePolicy9.setHorizontalStretch(0)
        sizePolicy9.setVerticalStretch(0)
        sizePolicy9.setHeightForWidth(self.filterMagic.sizePolicy().hasHeightForWidth())
        self.filterMagic.setSizePolicy(sizePolicy9)
        self.filterMagic.setMaximumSize(QSize(25, 16777215))
        self.filterMagic.setFont(font1)
        self.filterMagic.setToolTipDuration(2000)

        self.horizontalLayout.addWidget(self.filterMagic)

        self.filterLeeren = QPushButton(self.dokumente_2)
        self.filterLeeren.setObjectName(u"filterLeeren")
        font2 = QFont()
        font2.setFamilies([u"Ubuntu"])
        self.filterLeeren.setFont(font2)
        self.filterLeeren.setToolTipDuration(2000)

        self.horizontalLayout.addWidget(self.filterLeeren)

        self.fakeSpacer = QLabel(self.dokumente_2)
        self.fakeSpacer.setObjectName(u"fakeSpacer")
        sizePolicy10 = QSizePolicy(QSizePolicy.Policy.MinimumExpanding, QSizePolicy.Policy.Preferred)
        sizePolicy10.setHorizontalStretch(0)
        sizePolicy10.setVerticalStretch(0)
        sizePolicy10.setHeightForWidth(self.fakeSpacer.sizePolicy().hasHeightForWidth())
        self.fakeSpacer.setSizePolicy(sizePolicy10)
        self.fakeSpacer.setMinimumSize(QSize(20, 10))
        self.fakeSpacer.setMaximumSize(QSize(20, 16777214))
        self.fakeSpacer.setFont(font1)
        self.fakeSpacer.setLayoutDirection(Qt.LayoutDirection.LeftToRight)
        self.fakeSpacer.setAlignment(Qt.AlignmentFlag.AlignRight|Qt.AlignmentFlag.AlignTrailing|Qt.AlignmentFlag.AlignVCenter)

        self.horizontalLayout.addWidget(self.fakeSpacer)

        self.actionOCRall = QPushButton(self.dokumente_2)
        self.actionOCRall.setObjectName(u"actionOCRall")
        self.actionOCRall.setMaximumSize(QSize(25, 16777215))
        self.actionOCRall.setFont(font1)

        self.horizontalLayout.addWidget(self.actionOCRall)

        self.suchbegriffeText = QLineEdit(self.dokumente_2)
        self.suchbegriffeText.setObjectName(u"suchbegriffeText")
        sizePolicy11 = QSizePolicy(QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Fixed)
        sizePolicy11.setHorizontalStretch(0)
        sizePolicy11.setVerticalStretch(0)
        sizePolicy11.setHeightForWidth(self.suchbegriffeText.sizePolicy().hasHeightForWidth())
        self.suchbegriffeText.setSizePolicy(sizePolicy11)
        self.suchbegriffeText.setContextMenuPolicy(Qt.ContextMenuPolicy.DefaultContextMenu)

        self.horizontalLayout.addWidget(self.suchbegriffeText)


        self.verticalLayout_2.addLayout(self.horizontalLayout)

        self.docTableView = QTableWidget(self.dokumente_2)
        self.docTableView.setObjectName(u"docTableView")
        self.docTableView.setToolTipDuration(2000)
        self.docTableView.setInputMethodHints(Qt.InputMethodHint.ImhMultiLine)
        self.docTableView.setEditTriggers(QAbstractItemView.EditTrigger.NoEditTriggers)
        self.docTableView.setProperty(u"showDropIndicator", False)
        self.docTableView.setDragDropOverwriteMode(False)
        self.docTableView.setAlternatingRowColors(True)
        self.docTableView.setSelectionMode(QAbstractItemView.SelectionMode.SingleSelection)
        self.docTableView.setSelectionBehavior(QAbstractItemView.SelectionBehavior.SelectRows)
        self.docTableView.setTextElideMode(Qt.TextElideMode.ElideMiddle)
        self.docTableView.setVerticalScrollMode(QAbstractItemView.ScrollMode.ScrollPerPixel)
        self.docTableView.setShowGrid(False)
        self.docTableView.setSortingEnabled(True)
        self.docTableView.setCornerButtonEnabled(False)
        self.docTableView.setRowCount(0)
        self.docTableView.setColumnCount(0)
        self.docTableView.horizontalHeader().setMinimumSectionSize(20)
        self.docTableView.horizontalHeader().setStretchLastSection(True)
        self.docTableView.verticalHeader().setVisible(False)

        self.verticalLayout_2.addWidget(self.docTableView)


        self.gridLayout_9.addLayout(self.verticalLayout_2, 0, 0, 1, 1)

        self.splitter_4.addWidget(self.dokumente_2)
        self.notizen = QGroupBox(self.splitter_4)
        self.notizen.setObjectName(u"notizen")
        sizePolicy12 = QSizePolicy(QSizePolicy.Policy.Preferred, QSizePolicy.Policy.Preferred)
        sizePolicy12.setHorizontalStretch(1)
        sizePolicy12.setVerticalStretch(0)
        sizePolicy12.setHeightForWidth(self.notizen.sizePolicy().hasHeightForWidth())
        self.notizen.setSizePolicy(sizePolicy12)
        self.gridLayout_2 = QGridLayout(self.notizen)
        self.gridLayout_2.setObjectName(u"gridLayout_2")
        self.notizenText = QPlainTextEdit(self.notizen)
        self.notizenText.setObjectName(u"notizenText")
        self.notizenText.setContextMenuPolicy(Qt.ContextMenuPolicy.DefaultContextMenu)

        self.gridLayout_2.addWidget(self.notizenText, 0, 0, 1, 1)

        self.splitter_4.addWidget(self.notizen)
        self.splitter_5.addWidget(self.splitter_4)
        self.splitter_9.addWidget(self.splitter_5)
        self.browser = QWebEngineView(self.splitter_9)
        self.browser.setObjectName(u"browser")
        sizePolicy13 = QSizePolicy(QSizePolicy.Policy.Preferred, QSizePolicy.Policy.Preferred)
        sizePolicy13.setHorizontalStretch(8)
        sizePolicy13.setVerticalStretch(0)
        sizePolicy13.setHeightForWidth(self.browser.sizePolicy().hasHeightForWidth())
        self.browser.setSizePolicy(sizePolicy13)
        self.browser.setMinimumSize(QSize(10, 0))
        self.browser.setSizeIncrement(QSize(0, 0))
        self.browser.setBaseSize(QSize(0, 0))
        self.browser.setAcceptDrops(False)
        self.browser.setAutoFillBackground(False)
        self.browser.setUrl(QUrl(u"about:blank"))
        self.splitter_9.addWidget(self.browser)

        self.gridLayout.addWidget(self.splitter_9, 0, 0, 1, 1)

        self.tabs.addTab(self.dokumente, "")
        self.grunddaten = QWidget()
        self.grunddaten.setObjectName(u"grunddaten")
        self.gridLayout_14 = QGridLayout(self.grunddaten)
        self.gridLayout_14.setObjectName(u"gridLayout_14")
        self.splitter_7 = QSplitter(self.grunddaten)
        self.splitter_7.setObjectName(u"splitter_7")
        self.splitter_7.setOrientation(Qt.Orientation.Horizontal)
        self.splitter_7.setHandleWidth(5)
        self.splitter_7.setChildrenCollapsible(False)
        self.beteiligteBox = QGroupBox(self.splitter_7)
        self.beteiligteBox.setObjectName(u"beteiligteBox")
        self.gridLayout_12 = QGridLayout(self.beteiligteBox)
        self.gridLayout_12.setObjectName(u"gridLayout_12")
        self.beteiligteText = QTextEdit(self.beteiligteBox)
        self.beteiligteText.setObjectName(u"beteiligteText")
        self.beteiligteText.setMinimumSize(QSize(20, 0))
        self.beteiligteText.setToolTipDuration(2000)
        self.beteiligteText.setUndoRedoEnabled(False)
        self.beteiligteText.setLineWrapMode(QTextEdit.LineWrapMode.NoWrap)
        self.beteiligteText.setReadOnly(True)

        self.gridLayout_12.addWidget(self.beteiligteText, 0, 0, 1, 1)

        self.splitter_7.addWidget(self.beteiligteBox)
        self.splitter_6 = QSplitter(self.splitter_7)
        self.splitter_6.setObjectName(u"splitter_6")
        self.splitter_6.setOrientation(Qt.Orientation.Vertical)
        self.splitter_6.setChildrenCollapsible(False)
        self.instanzdatenBox = QGroupBox(self.splitter_6)
        self.instanzdatenBox.setObjectName(u"instanzdatenBox")
        self.gridLayout_11 = QGridLayout(self.instanzdatenBox)
        self.gridLayout_11.setObjectName(u"gridLayout_11")
        self.instanzenText = QTextEdit(self.instanzdatenBox)
        self.instanzenText.setObjectName(u"instanzenText")
        self.instanzenText.setMinimumSize(QSize(20, 0))
        self.instanzenText.setToolTipDuration(4000)
        self.instanzenText.setUndoRedoEnabled(False)
        self.instanzenText.setLineWrapMode(QTextEdit.LineWrapMode.NoWrap)
        self.instanzenText.setReadOnly(True)

        self.gridLayout_11.addWidget(self.instanzenText, 0, 0, 1, 1)

        self.splitter_6.addWidget(self.instanzdatenBox)
        self.terminsdatenBox = QGroupBox(self.splitter_6)
        self.terminsdatenBox.setObjectName(u"terminsdatenBox")
        self.gridLayout_8 = QGridLayout(self.terminsdatenBox)
        self.gridLayout_8.setObjectName(u"gridLayout_8")
        self.splitter_8 = QSplitter(self.terminsdatenBox)
        self.splitter_8.setObjectName(u"splitter_8")
        self.splitter_8.setOrientation(Qt.Orientation.Vertical)
        self.splitter_8.setChildrenCollapsible(False)
        self.termineTableView = QTableWidget(self.splitter_8)
        self.termineTableView.setObjectName(u"termineTableView")
        self.termineTableView.setContextMenuPolicy(Qt.ContextMenuPolicy.NoContextMenu)
        self.termineTableView.setToolTipDuration(2500)
        self.termineTableView.setEditTriggers(QAbstractItemView.EditTrigger.NoEditTriggers)
        self.termineTableView.setProperty(u"showDropIndicator", False)
        self.termineTableView.setAlternatingRowColors(True)
        self.termineTableView.setSelectionMode(QAbstractItemView.SelectionMode.SingleSelection)
        self.termineTableView.setSelectionBehavior(QAbstractItemView.SelectionBehavior.SelectRows)
        self.termineTableView.setSortingEnabled(True)
        self.termineTableView.setCornerButtonEnabled(False)
        self.splitter_8.addWidget(self.termineTableView)
        self.termineTableView.horizontalHeader().setStretchLastSection(True)
        self.termineTableView.verticalHeader().setVisible(False)
        self.terminDetailView = QTextEdit(self.splitter_8)
        self.terminDetailView.setObjectName(u"terminDetailView")
        self.terminDetailView.setContextMenuPolicy(Qt.ContextMenuPolicy.DefaultContextMenu)
        self.terminDetailView.setToolTipDuration(2500)
        self.terminDetailView.setUndoRedoEnabled(False)
        self.terminDetailView.setLineWrapMode(QTextEdit.LineWrapMode.NoWrap)
        self.terminDetailView.setReadOnly(True)
        self.splitter_8.addWidget(self.terminDetailView)

        self.gridLayout_8.addWidget(self.splitter_8, 0, 0, 1, 1)

        self.splitter_6.addWidget(self.terminsdatenBox)
        self.splitter_7.addWidget(self.splitter_6)

        self.gridLayout_14.addWidget(self.splitter_7, 0, 0, 1, 1)

        self.tabs.addTab(self.grunddaten, "")

        self.gridLayout_13.addWidget(self.tabs, 0, 0, 1, 1)

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QMenuBar(MainWindow)
        self.menubar.setObjectName(u"menubar")
        self.menubar.setGeometry(QRect(0, 0, 1275, 22))
        self.menuDatei = QMenu(self.menubar)
        self.menuDatei.setObjectName(u"menuDatei")
        self.menuPDF_Export_2 = QMenu(self.menuDatei)
        self.menuPDF_Export_2.setObjectName(u"menuPDF_Export_2")
        self.menuDatenhygiene = QMenu(self.menuDatei)
        self.menuDatenhygiene.setObjectName(u"menuDatenhygiene")
        self.menuOptionen = QMenu(self.menubar)
        self.menuOptionen.setObjectName(u"menuOptionen")
        self.menuPDF_Viewer = QMenu(self.menuOptionen)
        self.menuPDF_Viewer.setObjectName(u"menuPDF_Viewer")
        self.menuPDF_Export = QMenu(self.menuOptionen)
        self.menuPDF_Export.setObjectName(u"menuPDF_Export")
        self.menuUeber = QMenu(self.menubar)
        self.menuUeber.setObjectName(u"menuUeber")
        self.menuAnsicht = QMenu(self.menubar)
        self.menuAnsicht.setObjectName(u"menuAnsicht")
        self.menuSpalten_ein_ausblenden = QMenu(self.menuAnsicht)
        self.menuSpalten_ein_ausblenden.setObjectName(u"menuSpalten_ein_ausblenden")
        self.menuGeheimhaltung = QMenu(self.menuSpalten_ein_ausblenden)
        self.menuGeheimhaltung.setObjectName(u"menuGeheimhaltung")
        MainWindow.setMenuBar(self.menubar)
        self.statusBar = QStatusBar(MainWindow)
        self.statusBar.setObjectName(u"statusBar")
        MainWindow.setStatusBar(self.statusBar)
        self.toolBar = QToolBar(MainWindow)
        self.toolBar.setObjectName(u"toolBar")
        self.toolBar.setEnabled(True)
        self.toolBar.setFont(font1)
        self.toolBar.setMovable(False)
        self.toolBar.setIconSize(QSize(5, 5))
        self.toolBar.setToolButtonStyle(Qt.ToolButtonStyle.ToolButtonFollowStyle)
        self.toolBar.setFloatable(False)
        MainWindow.addToolBar(Qt.ToolBarArea.TopToolBarArea, self.toolBar)

        self.menubar.addAction(self.menuDatei.menuAction())
        self.menubar.addAction(self.menuOptionen.menuAction())
        self.menubar.addAction(self.menuAnsicht.menuAction())
        self.menubar.addAction(self.menuUeber.menuAction())
        self.menuDatei.addAction(self.actionOeffnen)
        self.menuDatei.addAction(self.actionZIP_ArchiveOeffnen)
        self.menuDatei.addAction(self.actionNachrichtSchliessen)
        self.menuDatei.addSeparator()
        self.menuDatei.addAction(self.menuPDF_Export_2.menuAction())
        self.menuDatei.addAction(self.actionTexterkennung)
        self.menuDatei.addSeparator()
        self.menuDatei.addAction(self.menuDatenhygiene.menuAction())
        self.menuDatei.addSeparator()
        self.menuDatei.addAction(self.actionSchliessen)
        self.menuPDF_Export_2.addAction(self.actionPDFExport)
        self.menuPDF_Export_2.addAction(self.actionFavPDFExport)
        self.menuPDF_Export_2.addAction(self.actionNotesPDFExport)
        self.menuDatenhygiene.addAction(self.actionVerlaufLoeschen)
        self.menuDatenhygiene.addAction(self.actionNotizUndSuchdatenbankLoeschen)
        self.menuOptionen.addAction(self.menuPDF_Viewer.menuAction())
        self.menuOptionen.addAction(self.menuPDF_Export.menuAction())
        self.menuOptionen.addAction(self.actionAktenverzeichnis_festlegen)
        self.menuOptionen.addSeparator()
        self.menuOptionen.addAction(self.actionOnlineAufUpdatesPruefen)
        self.menuOptionen.addAction(self.actionAnwendungshinweise)
        self.menuPDF_Viewer.addAction(self.actionPDF_js)
        self.menuPDF_Viewer.addAction(self.actionChromium)
        self.menuPDF_Viewer.addAction(self.actionnativ)
        self.menuPDF_Export.addAction(self.actionDeckblattBeiExport)
        self.menuPDF_Export.addAction(self.actionNotizenaufDeckblattausgeben)
        self.menuPDF_Export.addAction(self.actionFavoritenExportieren)
        self.menuPDF_Export.addAction(self.actionDateidatumExportieren)
        self.menuPDF_Export.addAction(self.actionNurFavoritenExportieren)
        self.menuPDF_Export.addAction(self.actionPDFnachExportOeffnen)
        self.menuUeber.addAction(self.actionAnleitung)
        self.menuUeber.addAction(self.actionSupport_anfragen)
        self.menuUeber.addAction(self.actionUeberOpenXJV)
        self.menuAnsicht.addAction(self.actionNachrichtenkopf)
        self.menuAnsicht.addAction(self.actionFavoriten)
        self.menuAnsicht.addAction(self.actionNotizen)
        self.menuAnsicht.addAction(self.actionMetadaten)
        self.menuAnsicht.addAction(self.actionSucheAnzeigen)
        self.menuAnsicht.addAction(self.menuSpalten_ein_ausblenden.menuAction())
        self.menuAnsicht.addSeparator()
        self.menuAnsicht.addAction(self.actionGrosse_Schrift)
        self.menuAnsicht.addAction(self.actionDateitabelleLinksbuendig)
        self.menuSpalten_ein_ausblenden.addAction(self.actionSpaltenkonfiguration)
        self.menuSpalten_ein_ausblenden.addSeparator()
        self.menuSpalten_ein_ausblenden.addAction(self.actionAlleSpaltenMarkieren)
        self.menuSpalten_ein_ausblenden.addAction(self.actionAlleSpaltenAbwaehlen)
        self.menuSpalten_ein_ausblenden.addSeparator()
        self.menuSpalten_ein_ausblenden.addAction(self.actionAbsenderColumn)
        self.menuSpalten_ein_ausblenden.addAction(self.actionAdressatColumn)
        self.menuSpalten_ein_ausblenden.addAction(self.actionAkteneinsichtColumn)
        self.menuSpalten_ein_ausblenden.addAction(self.actionBestandteilColumn)
        self.menuSpalten_ein_ausblenden.addAction(self.actionBezugsdateinameColumn)
        self.menuSpalten_ein_ausblenden.addAction(self.actionDatumColumn)
        self.menuSpalten_ein_ausblenden.addAction(self.actionDokumententypColumn)
        self.menuSpalten_ein_ausblenden.addAction(self.actionDokumentenklasseColumn)
        self.menuSpalten_ein_ausblenden.addAction(self.actionEEB_HinweisColumn)
        self.menuSpalten_ein_ausblenden.addAction(self.actionEingangsdatumColumn)
        self.menuSpalten_ein_ausblenden.addAction(self.actionErsetzenderScanColumn)
        self.menuSpalten_ein_ausblenden.addAction(self.actionErste_SnrColumn)
        self.menuSpalten_ein_ausblenden.addAction(self.actionErstellungszeitpunktColumn)
        self.menuSpalten_ein_ausblenden.addAction(self.actionfrGeschaeftszeichenColumn)
        self.menuSpalten_ein_ausblenden.addAction(self.menuGeheimhaltung.menuAction())
        self.menuSpalten_ein_ausblenden.addAction(self.actionJustizkostenrelevanzColumn)
        self.menuSpalten_ein_ausblenden.addAction(self.actionLetzte_SnrColumn)
        self.menuSpalten_ein_ausblenden.addAction(self.actionNur_MetadatenColumn)
        self.menuSpalten_ein_ausblenden.addAction(self.actionScandatumColumn)
        self.menuSpalten_ein_ausblenden.addAction(self.actionVeraktungsdatumColumn)
        self.menuSpalten_ein_ausblenden.addAction(self.actionVersionsnummerColumn)
        self.menuSpalten_ein_ausblenden.addAction(self.actionVertraulichkeitsstufeColumn)
        self.menuSpalten_ein_ausblenden.addAction(self.actionZustellung_StPO_41Column)
        self.menuSpalten_ein_ausblenden.addSeparator()
        self.menuSpalten_ein_ausblenden.addAction(self.actionLeereSpaltenAusblenden)
        self.menuGeheimhaltung.addAction(self.actionGeheimhaltungsgradColumn)
        self.menuGeheimhaltung.addAction(self.actionEinstufungsfristColumn)
        self.menuGeheimhaltung.addAction(self.actionEinstufungsdatumColumn)
        self.menuGeheimhaltung.addAction(self.actionHerausgeberColumn)
        self.menuGeheimhaltung.addAction(self.actionEinstufungsendeColumn)
        self.menuGeheimhaltung.addAction(self.actionGeheimBemerkungColumn)
        self.menuGeheimhaltung.addAction(self.actionVertraulichZuBehandelnColumn)
        self.toolBar.addAction(self.actionOeffnen)
        self.toolBar.addAction(self.actionZIP_ArchiveOeffnen)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionTexterkennungAktuellesPDF)
        self.toolBar.addAction(self.actionPDFExport)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionHistorieZurück)
        self.toolBar.addAction(self.actionHistorieVor)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionAktenverzeichnis_festlegen)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionZuruecksetzen)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionSupport_anfragen)
        self.toolBar.addAction(self.actionNeueVersion)
        self.toolBar.addSeparator()

        self.retranslateUi(MainWindow)
        self.actionSchliessen.triggered.connect(MainWindow.close)

        self.tabs.setCurrentIndex(0)


        QMetaObject.connectSlotsByName(MainWindow)
    # setupUi

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(QCoreApplication.translate("MainWindow", u"openXJV", None))
#if QT_CONFIG(accessibility)
        MainWindow.setAccessibleName(QCoreApplication.translate("MainWindow", u"openXJV", None))
#endif // QT_CONFIG(accessibility)
        self.actionUeberOpenXJV.setText(QCoreApplication.translate("MainWindow", u"\u00dcber openXJV", None))
        self.actionOeffnen.setText(QCoreApplication.translate("MainWindow", u"\u00d6ffnen", None))
        self.actionOeffnen.setIconText(QCoreApplication.translate("MainWindow", u"\ueaf3", None))
#if QT_CONFIG(tooltip)
        self.actionOeffnen.setToolTip(QCoreApplication.translate("MainWindow", u"XJustiz-Datei \u00f6ffnen", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionOeffnen.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+O", None))
#endif // QT_CONFIG(shortcut)
        self.actionPDF_js.setText(QCoreApplication.translate("MainWindow", u"PDF.js", None))
        self.actionPDF_js.setIconText(QCoreApplication.translate("MainWindow", u"PDF.js", None))
#if QT_CONFIG(tooltip)
        self.actionPDF_js.setToolTip(QCoreApplication.translate("MainWindow", u"PDF.js", None))
#endif // QT_CONFIG(tooltip)
        self.actionnativ.setText(QCoreApplication.translate("MainWindow", u"nativ", None))
        self.actionZuruecksetzen.setText(QCoreApplication.translate("MainWindow", u"Ansicht zur\u00fccksetzen", None))
        self.actionZuruecksetzen.setIconText(QCoreApplication.translate("MainWindow", u"\ue9d9", None))
        self.actionFavoriten_bereinigen.setText(QCoreApplication.translate("MainWindow", u"Favoriten bereinigen", None))
        self.actionAktenverzeichnis_festlegen.setText(QCoreApplication.translate("MainWindow", u"Aktenverzeichnis festlegen", None))
        self.actionAktenverzeichnis_festlegen.setIconText(QCoreApplication.translate("MainWindow", u"\ue617", None))
        self.actionDatumColumn.setText(QCoreApplication.translate("MainWindow", u"Datum", None))
        self.actionEingangsdatumColumn.setText(QCoreApplication.translate("MainWindow", u"Eingangsdatum", None))
        self.actionVeraktungsdatumColumn.setText(QCoreApplication.translate("MainWindow", u"Veraktungsdatum", None))
        self.actionDokumententypColumn.setText(QCoreApplication.translate("MainWindow", u"Dokumententyp", None))
        self.actionDokumentenklasseColumn.setText(QCoreApplication.translate("MainWindow", u"Dokumentklasse", None))
        self.actionBestandteilColumn.setText(QCoreApplication.translate("MainWindow", u"Bestandteil", None))
        self.actionVersionsnummerColumn.setText(QCoreApplication.translate("MainWindow", u"Versionsnummer", None))
        self.actionBezugsdateinameColumn.setText(QCoreApplication.translate("MainWindow", u"Bezugsdateiname", None))
        self.actionEEB_HinweisColumn.setText(QCoreApplication.translate("MainWindow", u"EEB-Hinweis", None))
        self.actionZustellung_StPO_41Column.setText(QCoreApplication.translate("MainWindow", u"Zustellung StPO \u00a741", None))
        self.actionAkteneinsichtColumn.setText(QCoreApplication.translate("MainWindow", u"Akteneinsicht", None))
        self.actionAbsenderColumn.setText(QCoreApplication.translate("MainWindow", u"Absender", None))
        self.actionAdressatColumn.setText(QCoreApplication.translate("MainWindow", u"Adressat", None))
        self.actionJustizkostenrelevanzColumn.setText(QCoreApplication.translate("MainWindow", u"Justizkostenrelevanz", None))
        self.actionfrGeschaeftszeichenColumn.setText(QCoreApplication.translate("MainWindow", u"fr. Gesch\u00e4ftszeichen", None))
        self.actionVertraulichkeitsstufeColumn.setText(QCoreApplication.translate("MainWindow", u"Vertraulichkeitsstufe", None))
        self.actionSpaltenkonfiguration.setText(QCoreApplication.translate("MainWindow", u"Spaltenkonfiguration", None))
        self.actionNachrichtenkopf.setText(QCoreApplication.translate("MainWindow", u"Nachrichtenkopf", None))
        self.actionFavoriten.setText(QCoreApplication.translate("MainWindow", u"Favoriten", None))
        self.actionLeereSpaltenAusblenden.setText(QCoreApplication.translate("MainWindow", u"Leere Spalten ausblenden", None))
        self.actionSchliessen.setText(QCoreApplication.translate("MainWindow", u"openXJV beenden", None))
#if QT_CONFIG(shortcut)
        self.actionSchliessen.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+Q", None))
#endif // QT_CONFIG(shortcut)
        self.actionChromium.setText(QCoreApplication.translate("MainWindow", u"Chromium", None))
        self.actionAnleitung.setText(QCoreApplication.translate("MainWindow", u"Anleitung", None))
#if QT_CONFIG(shortcut)
        self.actionAnleitung.setShortcut(QCoreApplication.translate("MainWindow", u"F1", None))
#endif // QT_CONFIG(shortcut)
        self.actionStyleFusion.setText(QCoreApplication.translate("MainWindow", u"Fusion", None))
        self.actionStyleWindows.setText(QCoreApplication.translate("MainWindow", u"Windows (klasssisch)", None))
        self.actionZIP_ArchiveOeffnen.setText(QCoreApplication.translate("MainWindow", u"ZIP-Archiv(e) \u00f6ffnen", None))
        self.actionZIP_ArchiveOeffnen.setIconText(QCoreApplication.translate("MainWindow", u"\ueb2c", None))
#if QT_CONFIG(shortcut)
        self.actionZIP_ArchiveOeffnen.setShortcut(QCoreApplication.translate("MainWindow", u"Alt+O", None))
#endif // QT_CONFIG(shortcut)
        self.actionSupport_anfragen.setText(QCoreApplication.translate("MainWindow", u"Support anfragen", None))
        self.actionSupport_anfragen.setIconText(QCoreApplication.translate("MainWindow", u"\uf0e2", None))
        self.actionNeueVersion.setText(QCoreApplication.translate("MainWindow", u"Neue Version", None))
        self.actionNeueVersion.setIconText(QCoreApplication.translate("MainWindow", u"\ue031", None))
#if QT_CONFIG(tooltip)
        self.actionNeueVersion.setToolTip(QCoreApplication.translate("MainWindow", u"Neue Programmversion verf\u00fcgbar. Anklicken, um Homepage zu \u00f6ffnen.", None))
#endif // QT_CONFIG(tooltip)
        self.actionOnlineAufUpdatesPruefen.setText(QCoreApplication.translate("MainWindow", u"Online auf Updates pr\u00fcfen", None))
        self.actionScandatumColumn.setText(QCoreApplication.translate("MainWindow", u"Scandatum", None))
        self.actionNotizen.setText(QCoreApplication.translate("MainWindow", u"Notizen", None))
        self.actionAlleSpaltenMarkieren.setText(QCoreApplication.translate("MainWindow", u"Alle Spalten markieren", None))
        self.actionGrosse_Schrift.setText(QCoreApplication.translate("MainWindow", u"Gro\u00dfe Schrift", None))
        self.actionErste_SnrColumn.setText(QCoreApplication.translate("MainWindow", u"Erste Seitennr.", None))
        self.actionZweite_Seitennr.setText(QCoreApplication.translate("MainWindow", u"Letzte Seitennr.", None))
        self.actionErstellungszeitpunktColumn.setText(QCoreApplication.translate("MainWindow", u"Erstellungszeitpunkt", None))
        self.actionNur_MetadatenColumn.setText(QCoreApplication.translate("MainWindow", u"Nur Metadaten", None))
        self.actionLetzte_SnrColumn.setText(QCoreApplication.translate("MainWindow", u"Letzte Seitennr.", None))
        self.actionAnwendungshinweise.setText(QCoreApplication.translate("MainWindow", u"Anwendungshinweise", None))
        self.actionHistorieZurück.setText(QCoreApplication.translate("MainWindow", u"Aktenhistorie zur\u00fcck", None))
        self.actionHistorieZurück.setIconText(QCoreApplication.translate("MainWindow", u"\ueac3", None))
#if QT_CONFIG(tooltip)
        self.actionHistorieZurück.setToolTip(QCoreApplication.translate("MainWindow", u"In zuletzt ge\u00f6ffneten Akten zur\u00fcckbl\u00e4ttern ", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionHistorieZurück.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+PgDown", None))
#endif // QT_CONFIG(shortcut)
        self.actionHistorieVor.setText(QCoreApplication.translate("MainWindow", u"Aktenhistorie vor", None))
        self.actionHistorieVor.setIconText(QCoreApplication.translate("MainWindow", u"\ueac9", None))
#if QT_CONFIG(tooltip)
        self.actionHistorieVor.setToolTip(QCoreApplication.translate("MainWindow", u"In zuletzt ge\u00f6ffneten Akten vorbl\u00e4ttern", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionHistorieVor.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+PgUp", None))
#endif // QT_CONFIG(shortcut)
        self.actionMetadaten.setText(QCoreApplication.translate("MainWindow", u"Metadaten", None))
        self.actionErsetzenderScanColumn.setText(QCoreApplication.translate("MainWindow", u"Ersetzender Scan", None))
        self.actionPDFExport.setText(QCoreApplication.translate("MainWindow", u"Nur Dateiansicht", None))
        self.actionPDFExport.setIconText(QCoreApplication.translate("MainWindow", u"\ue415", None))
#if QT_CONFIG(tooltip)
        self.actionPDFExport.setToolTip(QCoreApplication.translate("MainWindow", u"Aktuell aufgelistete Dateien in einer PDF-Datei zusammenfassen", None))
#endif // QT_CONFIG(tooltip)
        self.actionAlleSpaltenAbwaehlen.setText(QCoreApplication.translate("MainWindow", u"Alle Spalten abw\u00e4hlen", None))
        self.actionDeckblattBeiExport.setText(QCoreApplication.translate("MainWindow", u"Deckblatt erzeugen", None))
        self.actionDateidatumExportieren.setText(QCoreApplication.translate("MainWindow", u"Datum an Verzeichniseintr\u00e4ge anh\u00e4ngen", None))
#if QT_CONFIG(tooltip)
        self.actionDateidatumExportieren.setToolTip(QCoreApplication.translate("MainWindow", u"Dateidatum in Inhaltsverzeichnis \u00fcbernehmen", None))
#endif // QT_CONFIG(tooltip)
        self.actionFavoritenExportieren.setText(QCoreApplication.translate("MainWindow", u"Favoritenast im Inhaltsverzeichnis erzeugen", None))
#if QT_CONFIG(tooltip)
        self.actionFavoritenExportieren.setToolTip(QCoreApplication.translate("MainWindow", u"Favoriten in Inhaltsverzeichnis \u00fcbernehmen", None))
#endif // QT_CONFIG(tooltip)
        self.actionNurFavoritenExportieren.setText(QCoreApplication.translate("MainWindow", u"Nur die unter \"Dateien\" sichtbaren Favoriten exportieren", None))
        self.actionPDFnachExportOeffnen.setText(QCoreApplication.translate("MainWindow", u"PDF nach Export \u00f6ffnen", None))
        self.actionSucheAnzeigen.setText(QCoreApplication.translate("MainWindow", u"Suche anzeigen", None))
        self.actionTexterkennung.setText(QCoreApplication.translate("MainWindow", u"Texterkennung", None))
        self.actionTexterkennungAktuellesPDF.setText(QCoreApplication.translate("MainWindow", u"PDF-Texterkennung", None))
        self.actionTexterkennungAktuellesPDF.setIconText(QCoreApplication.translate("MainWindow", u"\ue5fa", None))
#if QT_CONFIG(tooltip)
        self.actionTexterkennungAktuellesPDF.setToolTip(QCoreApplication.translate("MainWindow", u"Wendet Texterkennung auf aktuell geladene PDF-Datei an", None))
#endif // QT_CONFIG(tooltip)
        self.actionNotizenaufDeckblattausgeben.setText(QCoreApplication.translate("MainWindow", u"Notizen auf Deckblatt ausgeben", None))
#if QT_CONFIG(tooltip)
        self.actionNotizenaufDeckblattausgeben.setToolTip(QCoreApplication.translate("MainWindow", u"Deckblatt wird die Notizen enthalten", None))
#endif // QT_CONFIG(tooltip)
        self.actionFavPDFExport.setText(QCoreApplication.translate("MainWindow", u"Nur Favoritenansicht", None))
        self.actionVerlaufLoeschen.setText(QCoreApplication.translate("MainWindow", u"Verlauf l\u00f6schen", None))
        self.actionNotizUndSuchdatenbankLoeschen.setText(QCoreApplication.translate("MainWindow", u"Notiz-, Favoriten- und Suchdatenbank leeren", None))
        self.actionNachrichtSchliessen.setText(QCoreApplication.translate("MainWindow", u"Schlie\u00dfen", None))
#if QT_CONFIG(tooltip)
        self.actionNachrichtSchliessen.setToolTip(QCoreApplication.translate("MainWindow", u"Aktuelle XJustiz-Nachricht schlie\u00dfen", None))
#endif // QT_CONFIG(tooltip)
        self.actionNotesPDFExport.setText(QCoreApplication.translate("MainWindow", u"Nur Notizen", None))
        self.actionGeheimhaltungsgradColumn.setText(QCoreApplication.translate("MainWindow", u"Geheimhaltungsgrad", None))
        self.actionEinstufungsfristColumn.setText(QCoreApplication.translate("MainWindow", u"Einstufungsfrist", None))
        self.actionEinstufungsdatumColumn.setText(QCoreApplication.translate("MainWindow", u"Einstufungsdatum", None))
        self.actionHerausgeberColumn.setText(QCoreApplication.translate("MainWindow", u"Herausgeber", None))
        self.actionEinstufungsendeColumn.setText(QCoreApplication.translate("MainWindow", u"Einstufungsende", None))
        self.actionGeheimBemerkungColumn.setText(QCoreApplication.translate("MainWindow", u"Bemerkung", None))
        self.actionVertraulichZuBehandelnColumn.setText(QCoreApplication.translate("MainWindow", u"Vertraulichkeit", None))
        self.actionDateitabelleLinksbuendig.setText(QCoreApplication.translate("MainWindow", u"Dateitabelle linksb\u00fcndig", None))
        self.nachrichtenkopf.setTitle(QCoreApplication.translate("MainWindow", u"Nachrichtenkopf", None))
        self.absenderLabel.setText(QCoreApplication.translate("MainWindow", u"Absender:", None))
        self.absenderText.setText("")
        self.absenderText.setPlaceholderText("")
        self.empfaengerLabel.setText(QCoreApplication.translate("MainWindow", u"Empf\u00e4nger:", None))
        self.erstellungszeitpunktLabel.setText(QCoreApplication.translate("MainWindow", u"Erstellt am:", None))
#if QT_CONFIG(tooltip)
        self.absAktenzeichenLabel.setToolTip(QCoreApplication.translate("MainWindow", u"Absenderaktenzeichen", None))
#endif // QT_CONFIG(tooltip)
        self.absAktenzeichenLabel.setText(QCoreApplication.translate("MainWindow", u"Abs. Az.:", None))
#if QT_CONFIG(tooltip)
        self.absenderAktenzeichenText.setToolTip(QCoreApplication.translate("MainWindow", u"Absenderaktenzeichen", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.empfAktenzeichenLabel.setToolTip(QCoreApplication.translate("MainWindow", u"Empf\u00e4ngeraktenzeichen", None))
#endif // QT_CONFIG(tooltip)
        self.empfAktenzeichenLabel.setText(QCoreApplication.translate("MainWindow", u"Empf. Az.:", None))
#if QT_CONFIG(tooltip)
        self.empfaengerAktenzeichenText.setToolTip(QCoreApplication.translate("MainWindow", u"Empf\u00e4ngeraktenzeichen", None))
#endif // QT_CONFIG(tooltip)
        self.sendungsprioritaetLabel.setText(QCoreApplication.translate("MainWindow", u"Priorit\u00e4t:", None))
        self.favoriten.setTitle(QCoreApplication.translate("MainWindow", u"Favoriten", None))
#if QT_CONFIG(tooltip)
        self.favTableView.setToolTip(QCoreApplication.translate("MainWindow", u"Klick \u00f6ffnet Vorschau, Doppelklick \u00f6ffnet die Datei im externen Standardprogramm.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.deleteFavoriteButton.setToolTip(QCoreApplication.translate("MainWindow", u"Markierten Favoriteneintrag l\u00f6schen", None))
#endif // QT_CONFIG(tooltip)
        self.deleteFavoriteButton.setText(QCoreApplication.translate("MainWindow", u"\ue59a", None))
#if QT_CONFIG(tooltip)
        self.saveFavouritesButton.setToolTip(QCoreApplication.translate("MainWindow", u"Alle Favoriten in einem Verzeichnis ablegen.", None))
#endif // QT_CONFIG(tooltip)
        self.saveFavouritesButton.setText(QCoreApplication.translate("MainWindow", u"\ue171", None))
#if QT_CONFIG(tooltip)
        self.exportFavoritesButton.setToolTip(QCoreApplication.translate("MainWindow", u"Favoriten als ZIP-Datei exportiern (Aktenauszug)", None))
#endif // QT_CONFIG(tooltip)
        self.exportFavoritesButton.setText(QCoreApplication.translate("MainWindow", u"\ue94d", None))
#if QT_CONFIG(tooltip)
        self.exportFavsToPdfButton.setToolTip(QCoreApplication.translate("MainWindow", u"Favoriten als PDF-Datei exportieren", None))
#endif // QT_CONFIG(tooltip)
        self.exportFavsToPdfButton.setText(QCoreApplication.translate("MainWindow", u"\ue415", None))
        self.inhalt.setTitle(QCoreApplication.translate("MainWindow", u"Inhalt", None))
#if QT_CONFIG(tooltip)
        self.inhaltView.setToolTip(QCoreApplication.translate("MainWindow", u"Strukturierte Darstellung des Inhalts gegliedert nach Dokumenten, Akten und Unterakten", None))
#endif // QT_CONFIG(tooltip)
        self.metadaten.setTitle(QCoreApplication.translate("MainWindow", u"Metadaten des aktiven Inhalts  ", None))
#if QT_CONFIG(tooltip)
        self.metadatenText.setToolTip(QCoreApplication.translate("MainWindow", u"Metadaten des unter \"Inhalt\" markierten Eintrags.", None))
#endif // QT_CONFIG(tooltip)
        self.metadatenText.setPlaceholderText("")
        self.dokumente_2.setTitle(QCoreApplication.translate("MainWindow", u"Dateien", None))
#if QT_CONFIG(tooltip)
        self.label_9.setToolTip(QCoreApplication.translate("MainWindow", u"Dateien anzeigen, die diese Zeichenketten in den Metadaten enthalten.", None))
#endif // QT_CONFIG(tooltip)
        self.label_9.setText(QCoreApplication.translate("MainWindow", u"+Filter:", None))
#if QT_CONFIG(tooltip)
        self.plusFilter.setToolTip(QCoreApplication.translate("MainWindow", u"Dateien anzeigen, die diese Zeichenketten in den Metadaten enthalten.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.label_10.setToolTip(QCoreApplication.translate("MainWindow", u"Ausfiltern von Dateien, die diese Zeichenketten in den Metadaten enthalten.", None))
#endif // QT_CONFIG(tooltip)
        self.label_10.setText(QCoreApplication.translate("MainWindow", u"-Filter:", None))
#if QT_CONFIG(tooltip)
        self.minusFilter.setToolTip(QCoreApplication.translate("MainWindow", u"Ausfiltern von Dateien, die diese Zeichenketten in den Metadaten enthalten.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.filterMagic.setToolTip(QCoreApplication.translate("MainWindow", u"Technische Dateien ausfiltern", None))
#endif // QT_CONFIG(tooltip)
        self.filterMagic.setText(QCoreApplication.translate("MainWindow", u"\ue663", None))
#if QT_CONFIG(tooltip)
        self.filterLeeren.setToolTip(QCoreApplication.translate("MainWindow", u"Alle Filter zur\u00fccksetzen", None))
#endif // QT_CONFIG(tooltip)
        self.filterLeeren.setText(QCoreApplication.translate("MainWindow", u"Filter leeren", None))
        self.fakeSpacer.setText(QCoreApplication.translate("MainWindow", u"\ue8b6", None))
#if QT_CONFIG(tooltip)
        self.actionOCRall.setToolTip(QCoreApplication.translate("MainWindow", u"Nicht durchsuchbare PDF-Dateien mit Texterkennung  durchsuchbar machen", None))
#endif // QT_CONFIG(tooltip)
        self.actionOCRall.setText(QCoreApplication.translate("MainWindow", u"\ue5fa", None))
#if QT_CONFIG(tooltip)
        self.suchbegriffeText.setToolTip(QCoreApplication.translate("MainWindow", u"Durch Leerzeichen getrennte Suchbegriffe. Alle Suchbegriffe m\u00fcssen im Dokument gefunden werden", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.docTableView.setToolTip(QCoreApplication.translate("MainWindow", u"Datei mit Doppelklick in Vorschau anzeigen oder extern \u00f6ffnen.", None))
#endif // QT_CONFIG(tooltip)
        self.notizen.setTitle(QCoreApplication.translate("MainWindow", u"Notizen", None))
        self.tabs.setTabText(self.tabs.indexOf(self.dokumente), QCoreApplication.translate("MainWindow", u"Dokumente", None))
        self.beteiligteBox.setTitle(QCoreApplication.translate("MainWindow", u"Beteiligte", None))
#if QT_CONFIG(tooltip)
        self.beteiligteText.setToolTip(QCoreApplication.translate("MainWindow", u"Daten zu Beteiligten", None))
#endif // QT_CONFIG(tooltip)
        self.beteiligteText.setHtml(QCoreApplication.translate("MainWindow", u"<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"hr { height: 1px; border-width: 0; }\n"
"li.unchecked::marker { content: \"\\2610\"; }\n"
"li.checked::marker { content: \"\\2612\"; }\n"
"</style></head><body style=\" font-family:'Segoe UI'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:'Ubuntu'; font-size:11pt;\"><br /></p></body></html>", None))
        self.instanzdatenBox.setTitle(QCoreApplication.translate("MainWindow", u"Instanzdaten", None))
#if QT_CONFIG(tooltip)
        self.instanzenText.setToolTip(QCoreApplication.translate("MainWindow", u"Liste der Stationen, die ein Vorgang durchlaufen hat.\n"
"Es ist nicht die juristische Bezeichnung einer Instanz gemeint.", None))
#endif // QT_CONFIG(tooltip)
        self.terminsdatenBox.setTitle(QCoreApplication.translate("MainWindow", u"Terminsdaten", None))
#if QT_CONFIG(tooltip)
        self.termineTableView.setToolTip(QCoreApplication.translate("MainWindow", u"Klick aktualisiert Detailansicht des gew\u00e4hlten Termins", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.terminDetailView.setToolTip(QCoreApplication.translate("MainWindow", u"Detailinformationen zum gew\u00e4hlten Termin", None))
#endif // QT_CONFIG(tooltip)
        self.tabs.setTabText(self.tabs.indexOf(self.grunddaten), QCoreApplication.translate("MainWindow", u"Grunddaten", None))
        self.menuDatei.setTitle(QCoreApplication.translate("MainWindow", u"Datei", None))
        self.menuPDF_Export_2.setTitle(QCoreApplication.translate("MainWindow", u"PDF-Export", None))
        self.menuDatenhygiene.setTitle(QCoreApplication.translate("MainWindow", u"Datenhygiene", None))
        self.menuOptionen.setTitle(QCoreApplication.translate("MainWindow", u"Optionen", None))
        self.menuPDF_Viewer.setTitle(QCoreApplication.translate("MainWindow", u"PDF Viewer", None))
        self.menuPDF_Export.setTitle(QCoreApplication.translate("MainWindow", u"PDF Export", None))
        self.menuUeber.setTitle(QCoreApplication.translate("MainWindow", u"Hilfe", None))
        self.menuAnsicht.setTitle(QCoreApplication.translate("MainWindow", u"Ansicht", None))
        self.menuSpalten_ein_ausblenden.setTitle(QCoreApplication.translate("MainWindow", u"Dokumente", None))
        self.menuGeheimhaltung.setTitle(QCoreApplication.translate("MainWindow", u"Geheimhaltung", None))
        self.toolBar.setWindowTitle(QCoreApplication.translate("MainWindow", u"toolBar", None))
    # retranslateUi

